/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PaginatedImport } from './routes/paginated'
import { Route as IndexImport } from './routes/index'
import { Route as RickmortyPaginatedIndexImport } from './routes/rickmorty-paginated/index'
import { Route as RickmortyPaginatedIdImport } from './routes/rickmorty-paginated/$id'

// Create Virtual Routes

const VirtualizationLazyImport = createFileRoute('/virtualization')()

// Create/Update Routes

const VirtualizationLazyRoute = VirtualizationLazyImport.update({
  id: '/virtualization',
  path: '/virtualization',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/virtualization.lazy').then((d) => d.Route),
)

const PaginatedRoute = PaginatedImport.update({
  id: '/paginated',
  path: '/paginated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RickmortyPaginatedIndexRoute = RickmortyPaginatedIndexImport.update({
  id: '/rickmorty-paginated/',
  path: '/rickmorty-paginated/',
  getParentRoute: () => rootRoute,
} as any)

const RickmortyPaginatedIdRoute = RickmortyPaginatedIdImport.update({
  id: '/rickmorty-paginated/$id',
  path: '/rickmorty-paginated/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/paginated': {
      id: '/paginated'
      path: '/paginated'
      fullPath: '/paginated'
      preLoaderRoute: typeof PaginatedImport
      parentRoute: typeof rootRoute
    }
    '/virtualization': {
      id: '/virtualization'
      path: '/virtualization'
      fullPath: '/virtualization'
      preLoaderRoute: typeof VirtualizationLazyImport
      parentRoute: typeof rootRoute
    }
    '/rickmorty-paginated/$id': {
      id: '/rickmorty-paginated/$id'
      path: '/rickmorty-paginated/$id'
      fullPath: '/rickmorty-paginated/$id'
      preLoaderRoute: typeof RickmortyPaginatedIdImport
      parentRoute: typeof rootRoute
    }
    '/rickmorty-paginated/': {
      id: '/rickmorty-paginated/'
      path: '/rickmorty-paginated'
      fullPath: '/rickmorty-paginated'
      preLoaderRoute: typeof RickmortyPaginatedIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/paginated': typeof PaginatedRoute
  '/virtualization': typeof VirtualizationLazyRoute
  '/rickmorty-paginated/$id': typeof RickmortyPaginatedIdRoute
  '/rickmorty-paginated': typeof RickmortyPaginatedIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/paginated': typeof PaginatedRoute
  '/virtualization': typeof VirtualizationLazyRoute
  '/rickmorty-paginated/$id': typeof RickmortyPaginatedIdRoute
  '/rickmorty-paginated': typeof RickmortyPaginatedIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/paginated': typeof PaginatedRoute
  '/virtualization': typeof VirtualizationLazyRoute
  '/rickmorty-paginated/$id': typeof RickmortyPaginatedIdRoute
  '/rickmorty-paginated/': typeof RickmortyPaginatedIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/paginated'
    | '/virtualization'
    | '/rickmorty-paginated/$id'
    | '/rickmorty-paginated'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/paginated'
    | '/virtualization'
    | '/rickmorty-paginated/$id'
    | '/rickmorty-paginated'
  id:
    | '__root__'
    | '/'
    | '/paginated'
    | '/virtualization'
    | '/rickmorty-paginated/$id'
    | '/rickmorty-paginated/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PaginatedRoute: typeof PaginatedRoute
  VirtualizationLazyRoute: typeof VirtualizationLazyRoute
  RickmortyPaginatedIdRoute: typeof RickmortyPaginatedIdRoute
  RickmortyPaginatedIndexRoute: typeof RickmortyPaginatedIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PaginatedRoute: PaginatedRoute,
  VirtualizationLazyRoute: VirtualizationLazyRoute,
  RickmortyPaginatedIdRoute: RickmortyPaginatedIdRoute,
  RickmortyPaginatedIndexRoute: RickmortyPaginatedIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/paginated",
        "/virtualization",
        "/rickmorty-paginated/$id",
        "/rickmorty-paginated/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/paginated": {
      "filePath": "paginated.tsx"
    },
    "/virtualization": {
      "filePath": "virtualization.lazy.tsx"
    },
    "/rickmorty-paginated/$id": {
      "filePath": "rickmorty-paginated/$id.tsx"
    },
    "/rickmorty-paginated/": {
      "filePath": "rickmorty-paginated/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
